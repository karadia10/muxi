name: Release and Tag Muxi

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  build-and-tag:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Run tests
      run: go test ./...

    - name: Get last tag
      id: get_last_tag
      run: |
        git fetch --tags
        TAG=$(git tag --list 'muxi/v*' --sort=-v:refname | head -n 1)
        echo "LAST_TAG=$TAG" >> $GITHUB_ENV
        if [ -z "$TAG" ]; then
          echo "CURRENT_X=0" >> $GITHUB_ENV
          echo "CURRENT_Y=0" >> $GITHUB_ENV
        else
          X=$(echo $TAG | sed -E 's/muxi\/v([0-9]+)\.([0-9]+)/\1/')
          Y=$(echo $TAG | sed -E 's/muxi\/v([0-9]+)\.([0-9]+)/\2/')
          echo "CURRENT_X=$X" >> $GITHUB_ENV
          echo "CURRENT_Y=$Y" >> $GITHUB_ENV
        fi

    - name: Determine release type
      id: release_type
      run: |
        # Get commit messages for the push (up to 20)
        COMMITS=$(git log -20 --pretty=%B ${{ github.event.before }}..${{ github.sha }})
        if echo "$COMMITS" | grep -iq "#major"; then
          echo "RELEASE_TYPE=major" >> $GITHUB_ENV
        else
          echo "RELEASE_TYPE=minor" >> $GITHUB_ENV
        fi

    - name: Compute next version
      id: bump_version
      run: |
        X=${{ env.CURRENT_X }}
        Y=${{ env.CURRENT_Y }}
        if [ "${{ env.RELEASE_TYPE }}" = "major" ]; then
          X=$((X+1))
          Y=0
        else
          Y=$((Y+1))
        fi
        echo "NEXT_TAG=muxi/v${X}.${Y}" >> $GITHUB_ENV
        echo "NEXT_X=$X" >> $GITHUB_ENV
        echo "NEXT_Y=$Y" >> $GITHUB_ENV

    - name: Create and push tag
      env:
        NEXT_TAG: ${{ env.NEXT_TAG }}
      run: |
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"
        git tag "$NEXT_TAG"
        git push origin "$NEXT_TAG"
